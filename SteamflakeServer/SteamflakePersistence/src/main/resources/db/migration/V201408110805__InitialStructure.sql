

-- Abstract model elements
CREATE TABLE MODEL_ELEMENT (
    ID UUID NOT NULL,
    SUMMARY VARCHAR(256) NULL,
    TYPE VARCHAR(128) NOT NULL  -- TBD: foreign key to reference table or else Java enum
);

ALTER TABLE MODEL_ELEMENT ADD CONSTRAINT PK_MODEL_ELEMENT PRIMARY KEY (ID);


-- Container elements
CREATE TABLE CONTAINER_ELEMENT (
    ID UUID NOT NULL
);

ALTER TABLE CONTAINER_ELEMENT ADD CONSTRAINT PK_CONTAINER_ELEMENT PRIMARY KEY (ID);

ALTER TABLE CONTAINER_ELEMENT ADD CONSTRAINT FK_CONTAINER_ELEMENT__MODEL_ELEMENT
  FOREIGN KEY (ID) REFERENCES MODEL_ELEMENT(ID) ON DELETE CASCADE;


-- Root container element
CREATE TABLE ROOT_CONTAINER_ELEMENT (
    ID UUID NOT NULL,
    SINGLE_ROW_ENFORCEMENT BOOLEAN DEFAULT TRUE
);

ALTER TABLE ROOT_CONTAINER_ELEMENT ADD CONSTRAINT PK_ROOT_CONTAINER_ELEMENT PRIMARY KEY (ID);

ALTER TABLE ROOT_CONTAINER_ELEMENT ADD CONSTRAINT FK_ROOT_CONTAINER_ELEMENT__CONTAINER_ELEMENT
  FOREIGN KEY (ID) REFERENCES CONTAINER_ELEMENT(ID) ON DELETE CASCADE;

ALTER TABLE ROOT_CONTAINER_ELEMENT ADD CONSTRAINT UQ_ROOT_CONTAINER_ELEMENT__SINGLE_ROW_ENFORCEMENT UNIQUE (SINGLE_ROW_ENFORCEMENT);

ALTER TABLE ROOT_CONTAINER_ELEMENT ADD CONSTRAINT CHK_ROOT_CONTAINER_ELEMENT__SINGLE_ROW CHECK (SINGLE_ROW_ENFORCEMENT = TRUE);


-- Named model elements
CREATE TABLE NAMED_ELEMENT (
    ID UUID NOT NULL,
    NAME VARCHAR(128) NOT NULL
);

ALTER TABLE NAMED_ELEMENT ADD CONSTRAINT PK_NAMED_ELEMENT PRIMARY KEY (ID);

ALTER TABLE NAMED_ELEMENT ADD CONSTRAINT FK_NAMED_ELEMENT__MODEL_ELEMENT
  FOREIGN KEY (ID) REFERENCES MODEL_ELEMENT(ID) ON DELETE CASCADE;

CREATE INDEX IDX_NAMED_ELEMENT__NAME ON NAMED_ELEMENT(NAME);


-- Named container elements
CREATE TABLE NAMED_CONTAINER_ELEMENT (
    ID UUID NOT NULL
);

ALTER TABLE NAMED_CONTAINER_ELEMENT ADD CONSTRAINT PK_NAMED_CONTAINER_ELEMENT PRIMARY KEY (ID);

ALTER TABLE NAMED_CONTAINER_ELEMENT ADD CONSTRAINT FK_NAMED_CONTAINER_ELEMENT__NAMED_ELEMENT
  FOREIGN KEY (ID) REFERENCES NAMED_ELEMENT(ID) ON DELETE CASCADE;

ALTER TABLE NAMED_CONTAINER_ELEMENT ADD CONSTRAINT FK_NAMED_CONTAINER_ELEMENT__CONTAINER_ELEMENT
  FOREIGN KEY (ID) REFERENCES CONTAINER_ELEMENT(ID) ON DELETE CASCADE;


-- Abstract namespaces
CREATE TABLE ABSTRACT_NAMESPACE (
    ID UUID NOT NULL
);

ALTER TABLE ABSTRACT_NAMESPACE ADD CONSTRAINT PK_ABSTRACT_NAMESPACE PRIMARY KEY (ID);

ALTER TABLE ABSTRACT_NAMESPACE ADD CONSTRAINT FK_ABSTRACT_NAMESPACE__NAMED_CONTAINER_ELEMENT
  FOREIGN KEY (ID) REFERENCES NAMED_CONTAINER_ELEMENT(ID) ON DELETE CASCADE;


-- Namespaces
CREATE TABLE NAMESPACE (
    ID UUID NOT NULL,
);

ALTER TABLE NAMESPACE ADD CONSTRAINT PK_NAMESPACE PRIMARY KEY (ID);

ALTER TABLE NAMESPACE ADD CONSTRAINT FK_NAMESPACE__ABSTRACT_NAMESPACE
  FOREIGN KEY (ID) REFERENCES ABSTRACT_NAMESPACE(ID) ON DELETE CASCADE;

CREATE VIEW V_NAMESPACE AS
SELECT MODEL_ELEMENT.ID ID,
       NAMED_ELEMENT.NAME NAME,
       MODEL_ELEMENT.SUMMARY SUMMARY
  FROM MODEL_ELEMENT
  INNER JOIN CONTAINER_ELEMENT ON CONTAINER_ELEMENT.ID = MODEL_ELEMENT.ID
  INNER JOIN NAMED_ELEMENT ON NAMED_ELEMENT.ID = MODEL_ELEMENT.ID
  INNER JOIN NAMED_CONTAINER_ELEMENT ON NAMED_CONTAINER_ELEMENT.ID = NAMED_ELEMENT.ID
  INNER JOIN ABSTRACT_NAMESPACE ON ABSTRACT_NAMESPACE.ID = NAMED_CONTAINER_ELEMENT.ID
  INNER JOIN NAMESPACE ON NAMESPACE.ID = ABSTRACT_NAMESPACE.ID;


-- Root namespace
CREATE TABLE ROOT_NAMESPACE (
    ID UUID NOT NULL
);

ALTER TABLE ROOT_NAMESPACE ADD CONSTRAINT PK_ROOT_NAMESPACE PRIMARY KEY (ID);

ALTER TABLE ROOT_NAMESPACE ADD CONSTRAINT FK_ROOT_NAMESPACE__ROOT_CONTAINER_ELEMENT
  FOREIGN KEY (ID) REFERENCES ROOT_CONTAINER_ELEMENT(ID) ON DELETE CASCADE;

ALTER TABLE ROOT_NAMESPACE ADD CONSTRAINT FK_ROOT_NAMESPACE__ABSTRACT_NAMESPACE
  FOREIGN KEY (ID) REFERENCES ABSTRACT_NAMESPACE(ID) ON DELETE CASCADE;

CREATE VIEW V_ROOT_NAMESPACE AS
SELECT MODEL_ELEMENT.ID ID,
       NAMED_ELEMENT.NAME NAME,
       MODEL_ELEMENT.SUMMARY SUMMARY
  FROM MODEL_ELEMENT
  INNER JOIN CONTAINER_ELEMENT ON CONTAINER_ELEMENT.ID = MODEL_ELEMENT.ID
  INNER JOIN ROOT_CONTAINER_ELEMENT ON ROOT_CONTAINER_ELEMENT.ID = CONTAINER_ELEMENT.ID
  INNER JOIN NAMED_ELEMENT ON NAMED_ELEMENT.ID = MODEL_ELEMENT.ID
  INNER JOIN NAMED_CONTAINER_ELEMENT ON NAMED_CONTAINER_ELEMENT.ID = NAMED_ELEMENT.ID
  INNER JOIN ABSTRACT_NAMESPACE ON ABSTRACT_NAMESPACE.ID = NAMED_CONTAINER_ELEMENT.ID
  INNER JOIN ROOT_NAMESPACE ON ROOT_NAMESPACE.ID = ABSTRACT_NAMESPACE.ID;
