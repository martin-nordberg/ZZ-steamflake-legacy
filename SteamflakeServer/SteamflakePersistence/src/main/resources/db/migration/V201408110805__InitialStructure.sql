
-----------------------------
-- Abstract model elements --
-----------------------------

-- Table
CREATE TABLE MODEL_ELEMENT (
    ID UUID NOT NULL,
    SUMMARY VARCHAR(256) NULL,
    DESTROYED BOOLEAN NOT NULL DEFAULT FALSE,
    TYPE VARCHAR(128) NOT NULL  -- TBD: foreign key to reference table or else Java enum
);

-- Primary key
ALTER TABLE MODEL_ELEMENT ADD CONSTRAINT PK_MODEL_ELEMENT PRIMARY KEY (ID);


------------------------
-- Container elements --
------------------------

-- Table
CREATE TABLE CONTAINER_ELEMENT (
    ID UUID NOT NULL
);

-- Primary key
ALTER TABLE CONTAINER_ELEMENT ADD CONSTRAINT PK_CONTAINER_ELEMENT PRIMARY KEY (ID);

-- Inheritance
ALTER TABLE CONTAINER_ELEMENT ADD CONSTRAINT PFK_CONTAINER_ELEMENT__MODEL_ELEMENT
  FOREIGN KEY (ID) REFERENCES MODEL_ELEMENT(ID) ON DELETE CASCADE;


----------------------------
-- Root container element --
----------------------------

-- Table
CREATE TABLE ROOT_CONTAINER_ELEMENT (
    ID UUID NOT NULL,
    SINGLE_ROW_ENFORCEMENT BOOLEAN NOT NULL DEFAULT TRUE
);

-- Primary key
ALTER TABLE ROOT_CONTAINER_ELEMENT ADD CONSTRAINT PK_ROOT_CONTAINER_ELEMENT PRIMARY KEY (ID);

-- Inheritance
ALTER TABLE ROOT_CONTAINER_ELEMENT ADD CONSTRAINT PFK_ROOT_CONTAINER_ELEMENT__CONTAINER_ELEMENT
  FOREIGN KEY (ID) REFERENCES CONTAINER_ELEMENT(ID) ON DELETE CASCADE;

-- Singleton
ALTER TABLE ROOT_CONTAINER_ELEMENT ADD CONSTRAINT UQ_ROOT_CONTAINER_ELEMENT__SINGLE_ROW_ENFORCEMENT UNIQUE (SINGLE_ROW_ENFORCEMENT);
ALTER TABLE ROOT_CONTAINER_ELEMENT ADD CONSTRAINT CHK_ROOT_CONTAINER_ELEMENT__SINGLE_ROW CHECK (SINGLE_ROW_ENFORCEMENT = TRUE);


--------------------------
-- Named model elements --
--------------------------

-- Table
CREATE TABLE NAMED_ELEMENT (
    ID UUID NOT NULL,
    NAME VARCHAR(128) NOT NULL
);

-- Primary key
ALTER TABLE NAMED_ELEMENT ADD CONSTRAINT PK_NAMED_ELEMENT PRIMARY KEY (ID);

-- Inheritance
ALTER TABLE NAMED_ELEMENT ADD CONSTRAINT PFK_NAMED_ELEMENT__MODEL_ELEMENT
  FOREIGN KEY (ID) REFERENCES MODEL_ELEMENT(ID) ON DELETE CASCADE;

-- Indexes
CREATE INDEX IDX_NAMED_ELEMENT__NAME ON NAMED_ELEMENT(NAME);


------------------------------
-- Named container elements --
------------------------------

-- Table
CREATE TABLE NAMED_CONTAINER_ELEMENT (
    ID UUID NOT NULL
);

-- Primary key
ALTER TABLE NAMED_CONTAINER_ELEMENT ADD CONSTRAINT PK_NAMED_CONTAINER_ELEMENT PRIMARY KEY (ID);

-- Inheritance
ALTER TABLE NAMED_CONTAINER_ELEMENT ADD CONSTRAINT PFK_NAMED_CONTAINER_ELEMENT__NAMED_ELEMENT
  FOREIGN KEY (ID) REFERENCES NAMED_ELEMENT(ID) ON DELETE CASCADE;
ALTER TABLE NAMED_CONTAINER_ELEMENT ADD CONSTRAINT PFK_NAMED_CONTAINER_ELEMENT__CONTAINER_ELEMENT
  FOREIGN KEY (ID) REFERENCES CONTAINER_ELEMENT(ID) ON DELETE CASCADE;


-------------------------
-- Abstract namespaces --
-------------------------

-- Table
CREATE TABLE ABSTRACT_NAMESPACE (
    ID UUID NOT NULL
);

-- Primary key
ALTER TABLE ABSTRACT_NAMESPACE ADD CONSTRAINT PK_ABSTRACT_NAMESPACE PRIMARY KEY (ID);

-- Inheritance
ALTER TABLE ABSTRACT_NAMESPACE ADD CONSTRAINT PFK_ABSTRACT_NAMESPACE__NAMED_CONTAINER_ELEMENT
  FOREIGN KEY (ID) REFERENCES NAMED_CONTAINER_ELEMENT(ID) ON DELETE CASCADE;


----------------
-- Namespaces --
----------------

-- Table
CREATE TABLE NAMESPACE (
    ID UUID NOT NULL,
    PARENT_CONTAINER_ID UUID NOT NULL
);

-- Primary key
ALTER TABLE NAMESPACE ADD CONSTRAINT PK_NAMESPACE PRIMARY KEY (ID);

-- Inheritance
ALTER TABLE NAMESPACE ADD CONSTRAINT PFK_NAMESPACE__ABSTRACT_NAMESPACE
  FOREIGN KEY (ID) REFERENCES ABSTRACT_NAMESPACE(ID) ON DELETE CASCADE;

-- Parent
ALTER TABLE NAMESPACE ADD CONSTRAINT FK_NAMESPACE__ABSTRACT_NAMESPACE
  FOREIGN KEY (PARENT_CONTAINER_ID) REFERENCES ABSTRACT_NAMESPACE(ID) ON DELETE CASCADE;

-- View
CREATE VIEW V_NAMESPACE AS
SELECT MODEL_ELEMENT.ID ID,
       NAMESPACE.PARENT_CONTAINER_ID PARENT_CONTAINER_ID,
       NAMED_ELEMENT.NAME NAME,
       MODEL_ELEMENT.SUMMARY SUMMARY
  FROM MODEL_ELEMENT
       INNER JOIN CONTAINER_ELEMENT ON CONTAINER_ELEMENT.ID = MODEL_ELEMENT.ID
       INNER JOIN NAMED_ELEMENT ON NAMED_ELEMENT.ID = MODEL_ELEMENT.ID
       INNER JOIN NAMED_CONTAINER_ELEMENT ON NAMED_CONTAINER_ELEMENT.ID = NAMED_ELEMENT.ID
       INNER JOIN ABSTRACT_NAMESPACE ON ABSTRACT_NAMESPACE.ID = NAMED_CONTAINER_ELEMENT.ID
       INNER JOIN NAMESPACE ON NAMESPACE.ID = ABSTRACT_NAMESPACE.ID
 WHERE DESTROYED = FALSE;


--------------------
-- Root namespace --
--------------------

-- Table
CREATE TABLE ROOT_NAMESPACE (
    ID UUID NOT NULL
);

-- Primary key
ALTER TABLE ROOT_NAMESPACE ADD CONSTRAINT PK_ROOT_NAMESPACE PRIMARY KEY (ID);

-- Inheritance
ALTER TABLE ROOT_NAMESPACE ADD CONSTRAINT PFK_ROOT_NAMESPACE__ROOT_CONTAINER_ELEMENT
  FOREIGN KEY (ID) REFERENCES ROOT_CONTAINER_ELEMENT(ID) ON DELETE CASCADE;
ALTER TABLE ROOT_NAMESPACE ADD CONSTRAINT PFK_ROOT_NAMESPACE__ABSTRACT_NAMESPACE
  FOREIGN KEY (ID) REFERENCES ABSTRACT_NAMESPACE(ID) ON DELETE CASCADE;

-- View
CREATE VIEW V_ROOT_NAMESPACE AS
SELECT MODEL_ELEMENT.ID ID,
       MODEL_ELEMENT.ID PARENT_CONTAINER_ID,
       NAMED_ELEMENT.NAME NAME,
       MODEL_ELEMENT.SUMMARY SUMMARY
  FROM MODEL_ELEMENT
       INNER JOIN CONTAINER_ELEMENT ON CONTAINER_ELEMENT.ID = MODEL_ELEMENT.ID
       INNER JOIN ROOT_CONTAINER_ELEMENT ON ROOT_CONTAINER_ELEMENT.ID = CONTAINER_ELEMENT.ID
       INNER JOIN NAMED_ELEMENT ON NAMED_ELEMENT.ID = MODEL_ELEMENT.ID
       INNER JOIN NAMED_CONTAINER_ELEMENT ON NAMED_CONTAINER_ELEMENT.ID = NAMED_ELEMENT.ID
       INNER JOIN ABSTRACT_NAMESPACE ON ABSTRACT_NAMESPACE.ID = NAMED_CONTAINER_ELEMENT.ID
       INNER JOIN ROOT_NAMESPACE ON ROOT_NAMESPACE.ID = ABSTRACT_NAMESPACE.ID
 WHERE DESTROYED = FALSE;

-- Singleton instance
INSERT INTO MODEL_ELEMENT (ID, SUMMARY, TYPE)
     VALUES ('bf6d4bfc-b169-4919-8712-05e54484921e', '(Top level namespace)', 'RootNamespace');
INSERT INTO CONTAINER_ELEMENT (ID) VALUES ('bf6d4bfc-b169-4919-8712-05e54484921e');
INSERT INTO ROOT_CONTAINER_ELEMENT (ID) VALUES ('bf6d4bfc-b169-4919-8712-05e54484921e');
INSERT INTO NAMED_ELEMENT (ID, NAME) VALUES ('bf6d4bfc-b169-4919-8712-05e54484921e', '$');
INSERT INTO NAMED_CONTAINER_ELEMENT (ID) VALUES ('bf6d4bfc-b169-4919-8712-05e54484921e');
INSERT INTO ABSTRACT_NAMESPACE (ID) VALUES ('bf6d4bfc-b169-4919-8712-05e54484921e');
INSERT INTO ROOT_NAMESPACE (ID) VALUES ('bf6d4bfc-b169-4919-8712-05e54484921e');


